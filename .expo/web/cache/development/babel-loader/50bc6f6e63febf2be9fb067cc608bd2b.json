{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/signup/SignupForm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Validator from 'email-validator';\nimport { firebase, db } from \"../../firebase\";\nvar SignupFormSchema = Yup.object().shape({\n  email: Yup.string().email().required('An email is required.'),\n  username: Yup.string().required().min(4, 'Your username has to have at least 3 characters'),\n  password: Yup.string().required().min(8, 'Your password has to have at least 8 characters')\n});\n\nvar onSignup = function onSignup(email, password, username) {\n  var authUser;\n  return _regeneratorRuntime.async(function onSignup$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n        case 3:\n          authUser = _context.sent;\n          console.log(\"Firebase Create User successfully!\", email, password);\n          db.collection(\"users\").doc(authUser.user.email).set({\n            owner_uid: authUser.user.uid,\n            username: username,\n            email: authUser.user.email\n          });\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          Alert.alert(_context.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\n\nvar SignupForm = function SignupForm(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      username: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      onSignup(values.email, values.password, values.username);\n    },\n    validationSchema: SignupFormSchema,\n    validateOnMount: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }\n    }, React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.email.length < 1 || Validator.validate(values.email) ? '#aaa' : 'red'\n      }],\n      placeholder: \"email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      autoFocus: false,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.username.length > 3 || values.username.length < 1 ? '#aaa' : 'red'\n      }],\n      placeholder: \"username\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      textContentType: \"username\",\n      onChangeText: handleChange('username'),\n      onBlur: handleBlur('username'),\n      value: values.username,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.password.length > 7 || values.password.length < 1 ? '#aaa' : 'red'\n      }],\n      placeholder: \"password\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      secureTextEntry: true,\n      textContentType: \"password\",\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }\n    }), React.createElement(Pressable, {\n      style: styles.button(isValid),\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#fff',\n        fontWeight: '700'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, \"Sign Up\")), React.createElement(View, {\n      style: styles.signUpContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#777'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#0096f6\",\n        fontWeight: '600'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, \"Log In\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputField: {\n    paddingVertical: 7,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 4,\n    marginHorizontal: 50,\n    marginBottom: 15\n  },\n  button: function button(isValid) {\n    return {\n      marginHorizontal: 50,\n      paddingVertical: 8,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 4,\n      backgroundColor: isValid ? '#0096f6' : '#9acaf7'\n    };\n  },\n  signUpContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 8,\n    paddingVertical: 10,\n    flexDirection: 'row'\n  }\n});\nexport default SignupForm;","map":{"version":3,"sources":["/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/signup/SignupForm.js"],"names":["React","Formik","Yup","Validator","firebase","db","SignupFormSchema","object","shape","email","string","required","username","min","password","onSignup","auth","createUserWithEmailAndPassword","authUser","console","log","collection","doc","user","set","owner_uid","uid","Alert","alert","message","SignupForm","navigation","values","handleChange","handleSubmit","handleBlur","errors","isValid","styles","inputField","borderColor","length","validate","button","color","fontWeight","signUpContainer","goBack","StyleSheet","create","paddingVertical","paddingLeft","borderWidth","borderRadius","marginHorizontal","marginBottom","justifyContent","alignItems","backgroundColor","marginTop","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TextInput, StyleSheet, Pressable, TouchableOpacity, Alert } from 'react-native'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Validator from 'email-validator';\nimport { firebase, db } from '../../firebase';\n\nconst SignupFormSchema = Yup.object().shape({\n\temail: Yup.string().email().required('An email is required.'),\n\tusername: Yup.string().required().min(4, 'Your username has to have at least 3 characters'),\n\tpassword: Yup.string().required().min(8, 'Your password has to have at least 8 characters')\n\n})\n\nconst onSignup = async(email, password, username) => {\n\ttry{\n\t\tconst authUser = await firebase.auth().createUserWithEmailAndPassword(email, password);\n\t\tconsole.log(\"Firebase Create User successfully!\", email, password)\n\n\t\tdb.collection(\"users\").doc(authUser.user.email).set({\n\t\t\towner_uid: authUser.user.uid,\n\t\t\tusername: username,\n\t\t\temail: authUser.user.email,\n\t\t})\n\n\t}catch(error){\n\t\tAlert.alert(error.message);\n\t}\n}\n\nconst SignupForm = ({navigation}) => {\n\treturn (\n\t\t<Formik \n\t\tinitialValues = {{email: '', username: '', password: ''}}\n\t\tonSubmit={(values)=>{\n\t\t\tonSignup(values.email, values.password, values.username);\n\t\t}}\n\t\tvalidationSchema = {SignupFormSchema}\n\t\tvalidateOnMount = {true}\n\t\t>\n\t\t{ ({handleChange, handleSubmit, handleBlur, values, errors, isValid}) => (\n\t\t<View>\n\t\t\t<TextInput style={[styles.inputField, {\n\t\t\t\tborderColor: values.email.length < 1 || Validator.validate(values.email) ? '#aaa' : 'red'\n\t\t\t}]}\n\t\t\t\tplaceholder=\"email\"\n\t\t\t\tautoCapitalize = 'none'\n\t\t\t\tkeyboardType = 'email-address'\n\t\t\t\ttextContentType = 'emailAddress'\n\t\t\t\tautoFocus = {false}\n\t\t\t\tonChangeText={handleChange('email')}\n\t\t\t\tonBlur={handleBlur('email')}\n\t\t\t\tvalue={values.email}\n\t\t\t/>\n\t\t\t<TextInput style={[styles.inputField, {\n\t\t\t\tborderColor: values.username.length > 3 || values.username.length < 1 ? '#aaa' : 'red'\n\t\t\t}]}\n\t\t\t\tplaceholder=\"username\"\n\t\t\t\tautoCapitalize = 'none'\n\t\t\t\tautoCorrect = {false}\n\t\t\t\ttextContentType = 'username'\n\t\t\t\tonChangeText={handleChange('username')}\n\t\t\t\tonBlur={handleBlur('username')}\n\t\t\t\tvalue={values.username}\n\t\t\t/>\n\t\t\t<TextInput style={[styles.inputField, {\n\t\t\t\tborderColor: values.password.length > 7 || values.password.length < 1 ? '#aaa' : 'red'\n\t\t\t}]}\n\t\t\t\tplaceholder=\"password\"\n\t\t\t\tautoCapitalize = 'none'\n\t\t\t\tautoCorrect = {false}\n\t\t\t\tsecureTextEntry = {true}\n\t\t\t\ttextContentType = 'password'\n\t\t\t\tonChangeText={handleChange('password')}\n\t\t\t\tonBlur={handleBlur('password')}\n\t\t\t\tvalue={values.password}\n\t\t\t/>\n\t\t\t<Pressable style={styles.button(isValid)} onPress={handleSubmit}>\n\t\t\t\t<Text style={{color: '#fff', fontWeight:'700'}}>Sign Up</Text>\n\t\t\t</Pressable>\n\n\t\t\t<View style={styles.signUpContainer}>\n\t\t\t\t<Text style={{color: '#777'}}>Already have an account? </Text>\n\t\t\t\t<TouchableOpacity onPress={() => navigation.goBack()}>\n\t\t\t\t\t<Text style={{color:\"#0096f6\", fontWeight:'600'}}>Log In</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t</View>\n\t\t)}\n\t\t</Formik>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tinputField: {\n\t\tpaddingVertical: 7,\n\t\tpaddingLeft: 10,\n\t\tborderWidth: 1,\n\t\tborderRadius: 4,\n\t\tmarginHorizontal: 50,\n\t\tmarginBottom: 15\n\t},\n\tbutton: isValid => ({\n\t\tmarginHorizontal: 50,\n\t\tpaddingVertical: 8,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tborderRadius: 4,\n\t\tbackgroundColor: isValid ? '#0096f6':'#9acaf7',\n\t}),\n\tsignUpContainer: {\n\t\tjustifyContent :'center',\n\t\talignItems: 'center',\n\t\tmarginTop: 8,\n\t\tpaddingVertical: 10,\n\t\tflexDirection: 'row'\n\t}\n})\n\nexport default SignupForm"]},"metadata":{},"sourceType":"module"}