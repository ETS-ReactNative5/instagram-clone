{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/login/LoginForm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Validator from 'email-validator';\nimport { firebase } from \"../../firebase.js\";\nvar LoginFormSchema = Yup.object().shape({\n  email: Yup.string().email().required('An email is required.'),\n  password: Yup.string().required().min(8, 'Your password has to have at least 8 characters')\n});\n\nvar onLogin = function onLogin(email, password) {\n  return _regeneratorRuntime.async(function onLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n        case 3:\n          console.log(\"Firebase login successfully\", email, password);\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          Alert.alert('Something\\'s wrong', 'The username or password is invalid!');\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar LoginForm = function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      onLogin(values.email, values.password, navigation);\n    },\n    validationSchema: LoginFormSchema,\n    validateOnMount: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur,\n        values = _ref2.values,\n        isValid = _ref2.isValid,\n        errors = _ref2.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }\n    }, React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.email.length < 1 || Validator.validate(values.email) ? '#aaa' : 'red'\n      }],\n      placeholder: \"Phone number, username or email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      autoFocus: false,\n      onChangeText: handleChange('email'),\n      onBlur: handleBlur('email'),\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.password.length < 1 || values.password.length >= 8 ? '#aaa' : 'red'\n      }],\n      placeholder: \"password\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      secureTextEntry: true,\n      textContentType: \"password\",\n      onChangeText: handleChange('password'),\n      onBlur: handleBlur('password'),\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }), React.createElement(View, {\n      style: {\n        alignItems: 'flex-end',\n        marginBottom: 30,\n        marginRight: 50\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#6bb0f5'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, \"Forgot Password\")), React.createElement(Pressable, {\n      style: styles.button,\n      onPress: handleSubmit,\n      style: styles.button(isValid),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#fff',\n        fontWeight: '700'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, \"Log In\")), React.createElement(View, {\n      style: styles.signUpContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#777'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \"Don't have an account yet? \"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.push('SignupScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#0096f6\",\n        fontWeight: '600'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, \"Sign Up\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputField: {\n    paddingVertical: 7,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 4,\n    marginHorizontal: 50,\n    marginBottom: 10\n  },\n  button: function button(isValid) {\n    return {\n      marginHorizontal: 50,\n      paddingVertical: 8,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 4,\n      backgroundColor: isValid ? '#0096f6' : '#9acaf7'\n    };\n  },\n  signUpContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 8,\n    paddingVertical: 10,\n    flexDirection: 'row'\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/login/LoginForm.js"],"names":["React","Formik","Yup","Validator","firebase","LoginFormSchema","object","shape","email","string","required","password","min","onLogin","auth","signInWithEmailAndPassword","console","log","Alert","alert","LoginForm","navigation","values","handleChange","handleSubmit","handleBlur","isValid","errors","styles","inputField","borderColor","length","validate","alignItems","marginBottom","marginRight","color","button","fontWeight","signUpContainer","push","StyleSheet","create","paddingVertical","paddingLeft","borderWidth","borderRadius","marginHorizontal","justifyContent","backgroundColor","marginTop","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, Pressable, Alert } from 'react-native'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Validator from 'email-validator';\nimport { firebase } from '../../firebase.js';\n\nconst LoginFormSchema = Yup.object().shape({\n\temail: Yup.string().email().required('An email is required.'),\n\tpassword: Yup.string().required().min(8, 'Your password has to have at least 8 characters')\n})\n\nconst onLogin = async(email, password) => {\n\ttry{\n\t\tawait firebase.auth().signInWithEmailAndPassword(email, password);\n\t\tconsole.log(\"Firebase login successfully\", email, password);\n\t}catch(error){\n\t\tAlert.alert('Something\\'s wrong', 'The username or password is invalid!');\n\t}\n}\n\nconst LoginForm = ({navigation}) => {\n\t\n\treturn (\n\t\t<Formik\n\t\tinitialValues={{email: '', password: ''}}\n\t\tonSubmit = { values => {\n\t\t\tonLogin(values.email, values.password, navigation)\n\n\t\t}}\n\t\tvalidationSchema = {LoginFormSchema}\n\t\tvalidateOnMount={true}\n\t\t>\n\t\t\t{({handleChange, handleSubmit, handleBlur, values, isValid, errors}) => (\n\t\t\t<View>\n\t\t\t<TextInput style={[styles.inputField, \n\t\t\t\t{ borderColor: values.email.length < 1 || Validator.validate(values.email) ? '#aaa' : 'red' }\n\t\t\t]}\n\t\t\t\tplaceholder = 'Phone number, username or email'\n\t\t\t\tautoCapitalize = 'none'\n\t\t\t\tkeyboardType = 'email-address'\n\t\t\t\ttextContentType = 'emailAddress'\n\t\t\t\tautoFocus = {false}\n\t\t\t\tonChangeText={handleChange('email')}\n\t\t\t\tonBlur = {handleBlur('email')}\n\t\t\t\tvalue={values.email}\n\t\t\t/>\n\t\t\t<TextInput style={[ styles.inputField, \n\t\t\t\t{ borderColor: values.password.length < 1 || values.password.length >= 8 ? '#aaa' : 'red' }\n\t\t\t]}\n\t\t\t\tplaceholder=\"password\"\n\t\t\t\tautoCapitalize = 'none'\n\t\t\t\tautoCorrect = {false}\n\t\t\t\tsecureTextEntry = {true}\n\t\t\t\ttextContentType = 'password'\n\t\t\t\tonChangeText={handleChange('password')}\n\t\t\t\tonBlur = {handleBlur('password')}\n\t\t\t\tvalue={values.password}\n\t\t\t/>\n\t\t\t<View style={{alignItems: 'flex-end', marginBottom: 30, marginRight: 50}}>\n\t\t\t\t<Text style={{color:'#6bb0f5'}}>Forgot Password</Text>\n\t\t\t</View>\n\t\t\t<Pressable style={styles.button} onPress={handleSubmit} style={styles.button(isValid)}>\n\t\t\t\t<Text style={{color: '#fff', fontWeight:'700'}}>Log In</Text>\n\t\t\t</Pressable>\n\n\t\t\t<View style={styles.signUpContainer}>\n\t\t\t\t<Text style={{color: '#777'}}>Don't have an account yet? </Text>\n\t\t\t\t<TouchableOpacity onPress = {() => navigation.push('SignupScreen')}>\n\t\t\t\t\t<Text style={{color:\"#0096f6\", fontWeight:'600'}}>Sign Up</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t\t</View>\n\t\t\t)}\n\t\t</Formik>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tinputField: {\n\t\tpaddingVertical: 7,\n\t\tpaddingLeft: 10,\n\t\tborderWidth: 1,\n\t\tborderRadius: 4,\n\t\tmarginHorizontal: 50,\n\t\tmarginBottom: 10,\n\t},\n\tbutton: isValid => ({\n\t\tmarginHorizontal: 50,\n\t\tpaddingVertical: 8,\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tborderRadius: 4,\n\t\tbackgroundColor: isValid ? '#0096f6':'#9acaf7',\n\t}),\n\tsignUpContainer: {\n\t\tjustifyContent :'center',\n\t\talignItems: 'center',\n\t\tmarginTop: 8,\n\t\tpaddingVertical: 10,\n\t\tflexDirection: 'row'\n\t}\n})\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}