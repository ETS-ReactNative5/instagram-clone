{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/NewPost/FormikPostUploader.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Divider } from 'react-native-elements';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { firebase, db } from \"../../firebase.js\";\nvar thumbnailImageSize = 100;\nvar PLACEHOLDER_IMG = \"https://via.placeholder.com/\" + thumbnailImageSize;\nvar uploadPostSchema = Yup.object().shape({\n  imageUrl: Yup.string().url().required('A url is required.'),\n  caption: Yup.string().max(2200, 'Caption has reached its limit.')\n});\n\nvar FormikPostUploader = function FormikPostUploader(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(PLACEHOLDER_IMG),\n      _useState2 = _slicedToArray(_useState, 2),\n      thumbnailUrl = _useState2[0],\n      setThumbnailUrl = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentLoggedInUser = _useState4[0],\n      setCurrentLoggedInUser = _useState4[1];\n\n  var getUsername = function getUsername() {\n    var user = firebase.auth().currentUser;\n    var unsubscribe = db.collection('users').where('owner_uid', '==', user.uid).limit(1).onSnapshot(function (snapshot) {\n      return snapshot.docs.map(function (doc) {\n        setCurrentLoggedInUser({\n          username: doc.data().username\n        });\n      });\n    });\n    return unsubscribe;\n  };\n\n  useEffect(function () {\n    getUsername();\n  }, []);\n\n  var uploadPostToFirebase = function uploadPostToFirebase(caption, imageUrl) {\n    var unsubscribe = db.collection('users').doc(firebase.auth().currentUser.email).collection('posts').add({\n      imageURL: imageUrl,\n      user: currentLoggedInUser.username,\n      profile_picture: PLACEHOLDER_IMG,\n      owner_uid: firebase.auth().currentUser.uid,\n      owner_email: firebase.auth().currentUser.email,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      caption: caption,\n      likes_by_users: [],\n      comments: []\n    }).then(function () {\n      return navigation.goBack();\n    });\n    return unsubscribe;\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      caption: '',\n      imageUrl: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(\"Post submitted successfully!\");\n      uploadPostToFirebase(values.caption, values.imageUrl);\n    },\n    validationSchema: uploadPostSchema,\n    validateOnMount: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var handleBlur = _ref2.handleBlur,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        margin: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: thumbnailUrl ? thumbnailUrl : PLACEHOLDER_IMG\n      },\n      style: styles.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }), React.createElement(TextInput, {\n      style: {\n        fontSize: 18,\n        flex: 1\n      },\n      placeholder: \"Write a caption...\",\n      placeholderTextColor: \"#aaa\",\n      multiline: true,\n      onChangeText: handleChange('caption'),\n      onBlur: handleBlur('caption'),\n      value: values.caption,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    })), React.createElement(Divider, {\n      width: 1,\n      orientation: \"vertical\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }), React.createElement(View, {\n      style: {\n        height: 70\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }, React.createElement(TextInput, {\n      onChange: function onChange(e) {\n        return setThumbnailUrl(e.nativeEvent.text);\n      },\n      style: {\n        fontSize: 14,\n        marginTop: 15,\n        marginLeft: 15\n      },\n      placeholder: \"Enter Image URL...\",\n      placeholderTextColor: \"#aaa\",\n      onChangeText: handleChange('imageUrl'),\n      onBlur: handleBlur('imageUrl'),\n      value: values.imageUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: '#ff3535',\n        marginLeft: 15,\n        marginTop: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, errors.imageUrl)), React.createElement(Button, {\n      onPress: handleSubmit,\n      title: \"share\",\n      disabled: !isValid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }\n    }));\n  });\n};\n\nvar styles = StyleSheet.create({\n  img: {\n    width: thumbnailImageSize,\n    height: thumbnailImageSize,\n    marginRight: 15\n  }\n});\nexport default FormikPostUploader;","map":{"version":3,"sources":["/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/NewPost/FormikPostUploader.js"],"names":["React","useState","useEffect","Divider","Yup","Formik","firebase","db","thumbnailImageSize","PLACEHOLDER_IMG","uploadPostSchema","object","shape","imageUrl","string","url","required","caption","max","FormikPostUploader","navigation","thumbnailUrl","setThumbnailUrl","currentLoggedInUser","setCurrentLoggedInUser","getUsername","user","auth","currentUser","unsubscribe","collection","where","uid","limit","onSnapshot","snapshot","docs","map","doc","username","data","uploadPostToFirebase","email","add","imageURL","profile_picture","owner_uid","owner_email","createdAt","firestore","FieldValue","serverTimestamp","likes_by_users","comments","then","goBack","values","console","log","handleBlur","handleChange","handleSubmit","errors","isValid","flexDirection","margin","uri","styles","img","fontSize","flex","height","e","nativeEvent","text","marginTop","marginLeft","color","StyleSheet","create","width","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, Image, TextInput, StyleSheet, Button } from 'react-native';\nimport { Divider } from 'react-native-elements'\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { firebase, db } from '../../firebase.js';\n\nconst thumbnailImageSize = 100;\nconst PLACEHOLDER_IMG = `https://via.placeholder.com/${thumbnailImageSize}`;\n\nconst uploadPostSchema = Yup.object().shape({\n\timageUrl: Yup.string().url().required('A url is required.'),\n\tcaption: Yup.string().max(2200, 'Caption has reached its limit.')\n})\n\nconst FormikPostUploader = ({navigation}) => {\n\tconst [thumbnailUrl, setThumbnailUrl] = useState(PLACEHOLDER_IMG);\n\tconst [currentLoggedInUser, setCurrentLoggedInUser] = useState(null);\n\n\tconst getUsername = () => {\n\t\tconst user = firebase.auth().currentUser;\n\t\tconst unsubscribe = db.collection('users').where('owner_uid', '==', user.uid).limit(1).onSnapshot(\n\t\t\t(snapshot) => snapshot.docs.map(doc => {\n\t\t\t\tsetCurrentLoggedInUser({\n\t\t\t\t\tusername: doc.data().username\n\t\t\t\t})\n\t\t\t})\n\t\t)\n\n\t\treturn unsubscribe;\n\t}\n\n\tuseEffect(() => {\n\t\tgetUsername()\n\t}, [])\n\n\tconst uploadPostToFirebase = (caption, imageUrl) => {\n\t\tconst unsubscribe = db.collection('users').doc(firebase.auth().currentUser.email).collection('posts')\n\t\t.add({\n\t\t\timageURL: imageUrl,\n\t\t\tuser: currentLoggedInUser.username,\n\t\t\tprofile_picture: PLACEHOLDER_IMG,\n\t\t\towner_uid: firebase.auth().currentUser.uid,\n\t\t\towner_email: firebase.auth().currentUser.email,\n\t\t\tcreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tcaption: caption,\n\t\t\tlikes_by_users: [],\n\t\t\tcomments: [],\n\t\t}).then(() => navigation.goBack());\n\n\t\treturn unsubscribe;\n\t}\n\n\treturn (\n\t\t<Formik initialValues={{caption: '', imageUrl: ''}} \n\t\tonSubmit={(values) => {\n\t\t\tconsole.log(\"Post submitted successfully!\");\n\t\t\tuploadPostToFirebase(values.caption, values.imageUrl);\n\t\t}} \n\t\tvalidationSchema={uploadPostSchema}\n\t\tvalidateOnMount={true}\n\t\t>\n\n\t\t\t{ ({ handleBlur, handleChange, handleSubmit, values, errors, isValid}) => (\n\t\t\t\t<View>\n\t\t\t\t\t<View style={{flexDirection:'row', margin: 15}}>\n\t\t\t\t\t\t<Image source={{uri: thumbnailUrl ? thumbnailUrl : PLACEHOLDER_IMG}} style={styles.img}/>\n\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\tstyle={{fontSize: 18, flex: 1}} \n\t\t\t\t\t\t\tplaceholder=\"Write a caption...\" \n\t\t\t\t\t\t\tplaceholderTextColor=\"#aaa\"\n\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\tonChangeText={handleChange('caption')}\n\t\t\t\t\t\t\tonBlur={handleBlur('caption')}\n\t\t\t\t\t\t\tvalue={values.caption}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Divider width={1} orientation=\"vertical\" />\n\t\t\t\t\t<View style={{height: 70}}>\n\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\tonChange={(e) => setThumbnailUrl(e.nativeEvent.text)}\n\t\t\t\t\t\t\tstyle={{fontSize: 14, marginTop: 15, marginLeft: 15}} \n\t\t\t\t\t\t\tplaceholder=\"Enter Image URL...\" \n\t\t\t\t\t\t\tplaceholderTextColor=\"#aaa\"\n\t\t\t\t\t\t\tonChangeText={handleChange('imageUrl')}\n\t\t\t\t\t\t\tonBlur={handleBlur('imageUrl')}\n\t\t\t\t\t\t\tvalue={values.imageUrl}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Text style={{color: '#ff3535', marginLeft: 15, marginTop:5}}>{errors.imageUrl}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Button onPress={handleSubmit} title=\"share\" disabled={!isValid} ></Button>\n\t\t\t\t</View>\n\t\t\t) }\n\t\t</Formik>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\timg: {\n\t\twidth: thumbnailImageSize, \n\t\theight: thumbnailImageSize,\n\t\tmarginRight: 15\n\t}\n})\n\nexport default FormikPostUploader\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}