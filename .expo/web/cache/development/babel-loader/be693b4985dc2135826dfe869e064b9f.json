{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/screens/CommentsScreen.js\",\n    _this2 = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider } from 'react-native-elements';\nimport CommentElement from \"../components/CommentElement\";\nimport { firebase, db } from \"../firebase\";\nexport default function CommentsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var post = route.params.post;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  var getCurrentUser = function getCurrentUser() {\n    var usersColl, users, currentUser;\n    return _regeneratorRuntime.async(function getCurrentUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('users').get());\n\n          case 2:\n            usersColl = _context.sent;\n            users = usersColl.docs.map(function (user) {\n              return user.data();\n            });\n            currentUser = users.find(function (user) {\n              return user.email === firebase.auth().currentUser.email;\n            });\n            setCurrentUser(currentUser);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getCurrentUser();\n  }, []);\n\n  var handleComment = function handleComment(comment, post) {\n    return _regeneratorRuntime.async(function handleComment$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            db.collection('users').doc(post.owner_email).collection('posts').doc(post.id).update({\n              comments: firebase.firestore.FieldValue.arrayUnion({\n                user: currentUser.username,\n                text: comment\n              })\n            }).then(function () {\n              return navigation.goBack();\n            }).catch(function (error) {\n              return console.log(\"Error posting comment: \", error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: '#fff',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, post.comments.map(function (comment, index) {\n    return React.createElement(CommentElement, {\n      comment: comment,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }\n    });\n  })), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(CommentInput, {\n    post: post,\n    comment: comment,\n    setComment: setComment,\n    currentUser: currentUser,\n    handleComment: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))));\n}\n\nvar Header = function Header(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.commentsHeader,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: {\n      position: 'absolute',\n      left: 15\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/back-icon.png\"),\n    style: {\n      width: 35,\n      height: 35\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 99\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontWeight: '700',\n      fontSize: 20\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, \"Comments\")), React.createElement(Divider, {\n    width: 1,\n    orientation: \"vertical\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }));\n};\n\nvar CommentInput = function CommentInput(_ref3) {\n  var comment = _ref3.comment,\n      post = _ref3.post,\n      setComment = _ref3.setComment,\n      currentUser = _ref3.currentUser,\n      handleComment = _ref3.handleComment;\n  return React.createElement(View, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Divider, {\n    width: 1,\n    orientation: \"vertical\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.commentInputWrapper,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: 'https://picsum.photos/1000'\n    },\n    style: {\n      borderRadius: 100,\n      width: 40,\n      height: 40,\n      marginRight: 5\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      borderWidth: 1,\n      borderRadius: 20,\n      borderColor: '#ccc'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.commentInput,\n    placeholder: \"Add a comment...\",\n    autoFocus: true,\n    multiline: true,\n    onChange: function onChange(e) {\n      return setComment(e.nativeEvent.text);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    disabled: comment.trim() ? false : true,\n    onPress: function onPress() {\n      return handleComment(comment, post);\n    },\n    style: styles.commentBtn,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: comment.trim() ? '#0096f6' : '#aadaf7',\n      fontWeight: '700',\n      fontSize: 15\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Post\")))));\n};\n\nvar styles = StyleSheet.create({\n  commentsHeader: {\n    position: 'relative',\n    borderColor: '#fff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginBottom: 15,\n    marginTop: 10\n  },\n  commentInputWrapper: {\n    flexDirection: 'row',\n    borderRadius: 25,\n    borderColor: '#ccc',\n    marginVertical: 5,\n    marginHorizontal: 10\n  },\n  commentInput: {\n    fontSize: 15,\n    paddingTop: 10,\n    paddingLeft: 20,\n    paddingBottom: 10,\n    flex: 1\n  },\n  commentBtn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingLeft: 5,\n    paddingRight: 10,\n    height: 40\n  }\n});","map":{"version":3,"sources":["/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/screens/CommentsScreen.js"],"names":["React","useEffect","useState","Divider","CommentElement","firebase","db","CommentsScreen","navigation","route","post","params","comment","setComment","currentUser","setCurrentUser","getCurrentUser","firestore","collection","get","usersColl","users","docs","map","user","data","find","email","auth","handleComment","doc","owner_email","id","update","comments","FieldValue","arrayUnion","username","text","then","goBack","catch","error","console","log","Keyboard","dismiss","backgroundColor","flex","index","Platform","OS","Header","styles","commentsHeader","position","left","require","width","height","fontWeight","fontSize","CommentInput","commentInputWrapper","uri","borderRadius","marginRight","flexDirection","borderWidth","borderColor","commentInput","e","nativeEvent","trim","commentBtn","color","StyleSheet","create","justifyContent","alignItems","marginBottom","marginTop","marginVertical","marginHorizontal","paddingTop","paddingLeft","paddingBottom","paddingRight"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;;;;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAOC,cAAP;AACA,SAASC,QAAT,EAAmBC,EAAnB;AAGA,eAAe,SAASC,cAAT,OAA6C;AAAA;;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACxD,MAAQC,IAAR,GAAiBD,KAAK,CAACE,MAAvB,CAAQD,IAAR;;AACA,kBAA8BR,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAsCX,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOY,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKX,QAAQ,CAACY,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,EADL;;AAAA;AACbC,YAAAA,SADa;AAEbC,YAAAA,KAFa,GAELD,SAAS,CAACE,IAAV,CAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,aAAvB,CAFK;AAGbX,YAAAA,WAHa,GAGCO,KAAK,CAACK,IAAN,CAAW,UAAAF,IAAI;AAAA,qBAAIA,IAAI,CAACG,KAAL,KAAetB,QAAQ,CAACuB,IAAT,GAAgBd,WAAhB,CAA4Ba,KAA/C;AAAA,aAAf,CAHD;AAInBZ,YAAAA,cAAc,CAACD,WAAD,CAAd;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAOAb,EAAAA,SAAS,CAAC,YAAI;AAACe,IAAAA,cAAc;AAAG,GAAvB,EAAyB,EAAzB,CAAT;;AAEA,MAAMa,aAAa,GAAG,SAAhBA,aAAgB,CAAMjB,OAAN,EAAeF,IAAf;AAAA;AAAA;AAAA;AAAA;AAClBJ,YAAAA,EAAE,CAACY,UAAH,CAAc,OAAd,EAAuBY,GAAvB,CAA2BpB,IAAI,CAACqB,WAAhC,EAA6Cb,UAA7C,CAAwD,OAAxD,EAAiEY,GAAjE,CAAqEpB,IAAI,CAACsB,EAA1E,EAA8EC,MAA9E,CAAqF;AACjFC,cAAAA,QAAQ,EAAE7B,QAAQ,CAACY,SAAT,CAAmBkB,UAAnB,CAA8BC,UAA9B,CACN;AACIZ,gBAAAA,IAAI,EAAEV,WAAW,CAACuB,QADtB;AAEIC,gBAAAA,IAAI,EAAE1B;AAFV,eADM;AADuE,aAArF,EAQC2B,IARD,CAQM;AAAA,qBAAI/B,UAAU,CAACgC,MAAX,EAAJ;AAAA,aARN,EASCC,KATD,CASO,UAAAC,KAAK;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC,CAAJ;AAAA,aATZ;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAaA,SACI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAIG,QAAQ,CAACC,OAAT,EAAJ;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,IAAI,EAAE;AAAhC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAExC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,CAACwB,QAAL,CAAcX,GAAd,CAAkB,UAACX,OAAD,EAAUqC,KAAV,EAAoB;AACnC,WAAO,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAErC,OAAzB;AAAkC,MAAA,GAAG,EAAEqC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CADL,CAFJ,EAOI,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEzC,IAApB;AAA0B,IAAA,OAAO,EAAEE,OAAnC;AAA4C,IAAA,UAAU,EAAEC,UAAxD;AAAoE,IAAA,WAAW,EAAEC,WAAjF;AAA8F,IAAA,aAAa,EAAEe,aAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADA,CADJ;AAeH;;AAED,IAAMuB,MAAM,GAAG,SAATA,MAAS;AAAA,MAAE5C,UAAF,SAAEA,UAAF;AAAA,SACX,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6C,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM9C,UAAU,CAACgC,MAAX,EAAN;AAAA,KAA3B;AAAsD,IAAA,KAAK,EAAE;AAACe,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,IAAI,EAAE;AAA7B,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+F,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEC,OAAO,2BAAtB;AAAmD,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/F,CADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,KAAb;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CADE,EAKF,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,CAAhB;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALE,CADW;AAAA,CAAf;;AAUA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAElD,OAAF,SAAEA,OAAF;AAAA,MAAWF,IAAX,SAAWA,IAAX;AAAA,MAAiBG,UAAjB,SAAiBA,UAAjB;AAAA,MAA6BC,WAA7B,SAA6BA,WAA7B;AAAA,MAA0Ce,aAA1C,SAA0CA,aAA1C;AAAA,SACjB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE,CAAhB;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACU,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAf;AAAoD,IAAA,KAAK,EAAE;AAACC,MAAAA,YAAY,EAAE,GAAf;AAAoBP,MAAAA,KAAK,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE,EAAvC;AAA2CO,MAAAA,WAAW,EAAE;AAAxD,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAClB,MAAAA,IAAI,EAAE,CAAP;AAAUmB,MAAAA,aAAa,EAAE,KAAzB;AAAgCC,MAAAA,WAAW,EAAE,CAA7C;AAAgDH,MAAAA,YAAY,EAAE,EAA9D;AAAkEI,MAAAA,WAAW,EAAE;AAA/E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEhB,MAAM,CAACiB,YADlB;AAEI,IAAA,WAAW,EAAC,kBAFhB;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,SAAS,EAAE,IAJf;AAKI,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAI1D,UAAU,CAAC0D,CAAC,CAACC,WAAF,CAAclC,IAAf,CAAd;AAAA,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAE1B,OAAO,CAAC6D,IAAR,KAAiB,KAAjB,GAAyB,IAArD;AAA2D,IAAA,OAAO,EAAE;AAAA,aAAI5C,aAAa,CAACjB,OAAD,EAAUF,IAAV,CAAjB;AAAA,KAApE;AAAsG,IAAA,KAAK,EAAE2C,MAAM,CAACqB,UAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE/D,OAAO,CAAC6D,IAAR,KAAiB,SAAjB,GAA2B,SAAnC;AAA8Cb,MAAAA,UAAU,EAAE,KAA1D;AAAiEC,MAAAA,QAAQ,EAAE;AAA3E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CARJ,CAFJ,CAFJ,CADiB;AAAA,CAArB;;AAqBA,IAAMR,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC7BvB,EAAAA,cAAc,EAAE;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBc,IAAAA,WAAW,EAAE,MAFK;AAGlBS,IAAAA,cAAc,EAAC,QAHG;AAIlBC,IAAAA,UAAU,EAAE,QAJM;AAKlBZ,IAAAA,aAAa,EAAE,KALG;AAMlBa,IAAAA,YAAY,EAAE,EANI;AAOlBC,IAAAA,SAAS,EAAE;AAPO,GADa;AAU7BlB,EAAAA,mBAAmB,EAAE;AACjBI,IAAAA,aAAa,EAAE,KADE;AAEjBF,IAAAA,YAAY,EAAE,EAFG;AAGjBI,IAAAA,WAAW,EAAE,MAHI;AAIjBa,IAAAA,cAAc,EAAE,CAJC;AAKjBC,IAAAA,gBAAgB,EAAE;AALD,GAVQ;AAiB7Bb,EAAAA,YAAY,EAAE;AACVT,IAAAA,QAAQ,EAAE,EADA;AAEVuB,IAAAA,UAAU,EAAE,EAFF;AAGVC,IAAAA,WAAW,EAAE,EAHH;AAIVC,IAAAA,aAAa,EAAE,EAJL;AAKVtC,IAAAA,IAAI,EAAE;AALI,GAjBe;AAwB7B0B,EAAAA,UAAU,EAAE;AACRI,IAAAA,cAAc,EAAE,QADR;AAERC,IAAAA,UAAU,EAAE,QAFJ;AAGRM,IAAAA,WAAW,EAAE,CAHL;AAIRE,IAAAA,YAAY,EAAE,EAJN;AAKR5B,IAAAA,MAAM,EAAE;AALA;AAxBiB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, SafeAreaView, TextInput, TouchableWithoutFeedback, Keyboard, TouchableOpacity, StyleSheet, Image, KeyboardAvoidingView, ScrollView } from 'react-native'\nimport { Divider } from 'react-native-elements';\nimport CommentElement from '../components/CommentElement';\nimport { firebase, db } from '../firebase'\n\n\nexport default function CommentsScreen({navigation, route}) {\n    const { post } = route.params;\n    const [comment, setComment] = useState('')\n    const [currentUser, setCurrentUser] = useState(null);\n\n    const getCurrentUser = async() => {\n        const usersColl = await firebase.firestore().collection('users').get();\n        const users = usersColl.docs.map(user => user.data())\n        const currentUser = users.find(user => user.email === firebase.auth().currentUser.email)\n        setCurrentUser(currentUser);\n    }\n\n    useEffect(()=>{getCurrentUser()}, [])\n\n    const handleComment = async(comment, post) => {\n        db.collection('users').doc(post.owner_email).collection('posts').doc(post.id).update({\n            comments: firebase.firestore.FieldValue.arrayUnion(\n                {\n                    user: currentUser.username,\n                    text: comment\n                }\n            )\n        })\n        .then(()=>navigation.goBack())\n        .catch(error => console.log(\"Error posting comment: \", error))\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={()=>Keyboard.dismiss()}>            \n        <SafeAreaView style={{backgroundColor: '#fff', flex: 1,}}>\n            <Header navigation={navigation}/>\n            <ScrollView showsVerticalScrollIndicator={false}>\n                {post.comments.map((comment, index) => {\n                    return <CommentElement comment={comment} key={index} />\n                })}\n            </ScrollView>\n            <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n                <CommentInput post={post} comment={comment} setComment={setComment} currentUser={currentUser} handleComment={handleComment}/>\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst Header = ({navigation}) => (\n    <View>\n\t\t<View style={styles.commentsHeader}>\n\t\t\t<TouchableOpacity onPress={() => navigation.goBack()} style={{position: 'absolute', left: 15}}><Image source={require('../assets/back-icon.png')} style={{width: 35, height: 35,}}/></TouchableOpacity>\n\t\t\t<Text style={{fontWeight: '700', fontSize: 20}}>Comments</Text>\n\t\t</View>\n\t\t<Divider width={1} orientation='vertical' />\n\t</View>\n)\n\nconst CommentInput = ({comment, post, setComment, currentUser, handleComment}) => (\n    <View>\n        <Divider width={1} orientation='vertical' />\n        <View style={styles.commentInputWrapper}>\n            <Image source={{uri: 'https://picsum.photos/1000'}} style={{borderRadius: 100, width: 40, height: 40, marginRight: 5}}/>\n            <View style={{flex: 1, flexDirection: 'row', borderWidth: 1, borderRadius: 20, borderColor: '#ccc'}}>\n                <TextInput \n                    style={styles.commentInput}\n                    placeholder='Add a comment...'\n                    autoFocus={true}\n                    multiline={true}\n                    onChange={e => setComment(e.nativeEvent.text)}\n                />\n                <TouchableOpacity disabled={comment.trim() ? false : true} onPress={()=>handleComment(comment, post)} style={styles.commentBtn}>\n                    <Text style={{color: comment.trim() ? '#0096f6':'#aadaf7', fontWeight: '700', fontSize: 15}}>Post</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    </View>\n)\n\nconst styles = StyleSheet.create({\n    commentsHeader: {\n\t\tposition: 'relative',\n\t\tborderColor: '#fff',\n\t\tjustifyContent:'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'row',\n\t\tmarginBottom: 15,\n\t\tmarginTop: 10\n\t},\n    commentInputWrapper: {\n        flexDirection: 'row', \n        borderRadius: 25, \n        borderColor: '#ccc',\n        marginVertical: 5,\n        marginHorizontal: 10\n    },\n    commentInput: {\n        fontSize: 15, \n        paddingTop: 10, \n        paddingLeft: 20, \n        paddingBottom: 10,\n        flex: 1\n    },\n    commentBtn: {\n        justifyContent: 'center', \n        alignItems: 'center', \n        paddingLeft: 5,\n        paddingRight: 10,\n        height: 40\n    }\n})"]},"metadata":{},"sourceType":"module"}