{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/login/LoginForm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Validator from \"email-validator\";\nimport { firebase } from \"../../firebase.js\";\nvar LoginFormSchema = Yup.object().shape({\n  email: Yup.string().email().required(\"An email is required.\"),\n  password: Yup.string().required().min(8, \"Your password has to have at least 8 characters\")\n});\n\nvar onLogin = function onLogin(email, password) {\n  return _regeneratorRuntime.async(function onLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n        case 3:\n          console.log(\"Firebase login successfully\", email, password);\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          Alert.alert(\"Something's wrong\", \"The username or password is invalid!\");\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar LoginForm = function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      onLogin(values.email, values.password, navigation);\n    },\n    validationSchema: LoginFormSchema,\n    validateOnMount: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur,\n        values = _ref2.values,\n        isValid = _ref2.isValid,\n        errors = _ref2.errors;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.email.length < 1 || Validator.validate(values.email) ? \"#aaa\" : \"red\"\n      }],\n      placeholder: \"Phone number, username or email\",\n      autoCapitalize: \"none\",\n      keyboardType: \"email-address\",\n      textContentType: \"emailAddress\",\n      autoFocus: false,\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      value: values.email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }), React.createElement(TextInput, {\n      style: [styles.inputField, {\n        borderColor: values.password.length < 1 || values.password.length >= 8 ? \"#aaa\" : \"red\"\n      }],\n      placeholder: \"password\",\n      autoCapitalize: \"none\",\n      autoCorrect: false,\n      secureTextEntry: true,\n      textContentType: \"password\",\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      value: values.password,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }), React.createElement(View, {\n      style: {\n        alignItems: \"flex-end\",\n        marginBottom: 30,\n        marginRight: 50\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#6bb0f5\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, \"Forgot Password\")), React.createElement(Pressable, {\n      onPress: handleSubmit,\n      style: styles.button(isValid),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\",\n        fontWeight: \"700\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, \"Log In\")), React.createElement(View, {\n      style: styles.signUpContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#777\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, \"Don't have an account yet? \"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.push(\"SignupScreen\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#0096f6\",\n        fontWeight: \"600\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }, \"Sign Up\"))));\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputField: {\n    paddingVertical: 7,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 4,\n    marginHorizontal: 50,\n    marginBottom: 10\n  },\n  button: function button(isValid) {\n    return {\n      marginHorizontal: 50,\n      paddingVertical: 8,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: 4,\n      backgroundColor: isValid ? \"#0096f6\" : \"#9acaf7\"\n    };\n  },\n  signUpContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 8,\n    paddingVertical: 10,\n    flexDirection: \"row\"\n  }\n});\nexport default LoginForm;","map":{"version":3,"sources":["/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/components/login/LoginForm.js"],"names":["React","Formik","Yup","Validator","firebase","LoginFormSchema","object","shape","email","string","required","password","min","onLogin","auth","signInWithEmailAndPassword","console","log","Alert","alert","LoginForm","navigation","values","handleChange","handleSubmit","handleBlur","isValid","errors","styles","inputField","borderColor","length","validate","alignItems","marginBottom","marginRight","color","button","fontWeight","signUpContainer","push","StyleSheet","create","paddingVertical","paddingLeft","borderWidth","borderRadius","marginHorizontal","justifyContent","backgroundColor","marginTop","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n\tView,\n\tText,\n\tTextInput,\n\tStyleSheet,\n\tTouchableOpacity,\n\tPressable,\n\tAlert,\n} from \"react-native\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Validator from \"email-validator\";\nimport { firebase } from \"../../firebase.js\";\n\nconst LoginFormSchema = Yup.object().shape({\n\temail: Yup.string().email().required(\"An email is required.\"),\n\tpassword: Yup.string()\n\t\t.required()\n\t\t.min(8, \"Your password has to have at least 8 characters\"),\n});\n\nconst onLogin = async (email, password) => {\n\ttry {\n\t\tawait firebase.auth().signInWithEmailAndPassword(email, password);\n\t\tconsole.log(\"Firebase login successfully\", email, password);\n\t} catch (error) {\n\t\tAlert.alert(\"Something's wrong\", \"The username or password is invalid!\");\n\t}\n};\n\nconst LoginForm = ({ navigation }) => {\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{ email: \"\", password: \"\" }}\n\t\t\tonSubmit={(values) => {\n\t\t\t\tonLogin(values.email, values.password, navigation);\n\t\t\t}}\n\t\t\tvalidationSchema={LoginFormSchema}\n\t\t\tvalidateOnMount={true}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\thandleSubmit,\n\t\t\t\thandleBlur,\n\t\t\t\tvalues,\n\t\t\t\tisValid,\n\t\t\t\terrors,\n\t\t\t}) => (\n\t\t\t\t<View>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tstyles.inputField,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\t\t\tvalues.email.length < 1 || Validator.validate(values.email)\n\t\t\t\t\t\t\t\t\t\t? \"#aaa\"\n\t\t\t\t\t\t\t\t\t\t: \"red\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tplaceholder=\"Phone number, username or email\"\n\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\tkeyboardType=\"email-address\"\n\t\t\t\t\t\ttextContentType=\"emailAddress\"\n\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\tonChangeText={handleChange(\"email\")}\n\t\t\t\t\t\tonBlur={handleBlur(\"email\")}\n\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\tstyles.inputField,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\t\t\tvalues.password.length < 1 || values.password.length >= 8\n\t\t\t\t\t\t\t\t\t\t? \"#aaa\"\n\t\t\t\t\t\t\t\t\t\t: \"red\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\tsecureTextEntry={true}\n\t\t\t\t\t\ttextContentType=\"password\"\n\t\t\t\t\t\tonChangeText={handleChange(\"password\")}\n\t\t\t\t\t\tonBlur={handleBlur(\"password\")}\n\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\talignItems: \"flex-end\",\n\t\t\t\t\t\t\tmarginBottom: 30,\n\t\t\t\t\t\t\tmarginRight: 50,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ color: \"#6bb0f5\" }}>Forgot Password</Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Pressable onPress={handleSubmit} style={styles.button(isValid)}>\n\t\t\t\t\t\t<Text style={{ color: \"#fff\", fontWeight: \"700\" }}>Log In</Text>\n\t\t\t\t\t</Pressable>\n\n\t\t\t\t\t<View style={styles.signUpContainer}>\n\t\t\t\t\t\t<Text style={{ color: \"#777\" }}>Don't have an account yet? </Text>\n\t\t\t\t\t\t<TouchableOpacity onPress={() => navigation.push(\"SignupScreen\")}>\n\t\t\t\t\t\t\t<Text style={{ color: \"#0096f6\", fontWeight: \"600\" }}>\n\t\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nconst styles = StyleSheet.create({\n\tinputField: {\n\t\tpaddingVertical: 7,\n\t\tpaddingLeft: 10,\n\t\tborderWidth: 1,\n\t\tborderRadius: 4,\n\t\tmarginHorizontal: 50,\n\t\tmarginBottom: 10,\n\t},\n\tbutton: (isValid) => ({\n\t\tmarginHorizontal: 50,\n\t\tpaddingVertical: 8,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 4,\n\t\tbackgroundColor: isValid ? \"#0096f6\" : \"#9acaf7\",\n\t}),\n\tsignUpContainer: {\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tmarginTop: 8,\n\t\tpaddingVertical: 10,\n\t\tflexDirection: \"row\",\n\t},\n});\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}