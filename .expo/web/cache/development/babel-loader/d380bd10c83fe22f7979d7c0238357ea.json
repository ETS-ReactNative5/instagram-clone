{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/AuthNavigation.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { SignedInStack, SignedOutStack } from \"./screens/Navigation.js\";\nimport { firebase } from \"./firebase.js\";\nimport LogoScreen from \"./screens/LogoScreen.js\";\n\nvar AuthNavigation = function AuthNavigation() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  function resumeSession() {\n    return _regeneratorRuntime.async(function resumeSession$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.auth().onAuthStateChanged(function (user) {\n              return user ? setCurrentUser(user) : setCurrentUser(null);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    resumeSession();\n  }, []);\n  return React.createElement(React.Fragment, null, currentUser ? React.createElement(SignedInStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }\n  }) : React.createElement(SignedOutStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 46\n    }\n  }));\n};\n\nexport default AuthNavigation;","map":{"version":3,"sources":["/Volumes/Transcend/Coding Projects/React Projects/instagram-clone/AuthNavigation.js"],"names":["React","useState","useEffect","SignedInStack","SignedOutStack","firebase","LogoScreen","AuthNavigation","currentUser","setCurrentUser","resumeSession","auth","onAuthStateChanged","user"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,cAAxB;AACA,SAASC,QAAT;AACA,OAAOC,UAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC5B,kBAAsCN,QAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,cAApB;;AAEA,WAAeC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOL,QAAQ,CAACM,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD;AAAA,qBAAUA,IAAI,GAAGJ,cAAc,CAACI,IAAD,CAAjB,GAA0BJ,cAAc,CAAC,IAAD,CAAtD;AAAA,aAAnC,CADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAP,EAAAA,SAAS,CAAC,YAAI;AACbQ,IAAAA,aAAa;AACb,GAFQ,EAEN,EAFM,CAAT;AAkBA,SAAO,0CAAGF,WAAW,GAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArC,CAAP;AACA,CA1BD;;AA4BA,eAAeD,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SignedInStack, SignedOutStack } from './screens/Navigation.js';\nimport { firebase } from './firebase.js';\nimport LogoScreen from './screens/LogoScreen.js';\n\nconst AuthNavigation = () => {\n\tconst [currentUser, setCurrentUser] = useState(null);\n\n\tasync function resumeSession(){\n\t\tawait firebase.auth().onAuthStateChanged((user) => user ? setCurrentUser(user) : setCurrentUser(null));\n\t}\n\n\tuseEffect(()=>{\n\t\tresumeSession()\n\t}, [])\n\n\t// useEffect(\n\t// \t() => firebase.auth().onAuthStateChanged((user) => {\n\t// \t\tuser ? setCurrentUser(user) : setCurrentUser(null)\n\t// \t\t// If the auth instance returns a user, setCurrentUser(User)\n\t// \t\t// else (means the auth returns null) setCurrentUser(null)\n\n\t// \t\t// Side Note: Once the user logs in (ex: firebase.auth().signInWithEmailAndPassword(email, password) (line 15 in LoginForm.js)),\n\t// \t\t// that user becomes the current user of the Auth instance. So untill that user logs out (ex: ) that user\n\t// \t\t// will keep on being the user of the Auth instance\n\n\t// \t}),\n\t// \t[]\n\t// )\n\n\treturn <>{currentUser ? <SignedInStack /> : <SignedOutStack />}</>\n}\n\nexport default AuthNavigation"]},"metadata":{},"sourceType":"module"}